// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  username       String   @unique
  email          String   @unique
  password       String
  profilePicture String?  // Cloudinary URL
  coverPicture   String?  // Cloudinary URL
  isAdmin        Boolean  @default(false)
  desc           String?
  from           String?  @default("Ghana")
  city           String?  @default("Accra")
  relationship   Int?     @default(1)
  posts          Post[]
  likes          Like[]
  followedBy     Follow[] @relation("FollowedBy")
  following      Follow[] @relation("Following")
}

model Post {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  desc      String?
  img       String?
  likes     Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id     Int    @id @default(autoincrement())
  userId Int
  postId Int
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
}

model Follow {
  id           Int    @id @default(autoincrement())
  followerId   Int
  followingId  Int
  follower     User   @relation("Following", fields: [followerId], references: [id])
  following    User   @relation("FollowedBy", fields: [followingId], references: [id])
}
